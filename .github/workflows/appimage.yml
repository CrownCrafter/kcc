name: AppImage Build
on: push 
jobs: 

  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@master
    - name: Install required dependencies
      run: sudo apt-get install desktop-file-utils zsync python qt5-default

    # Runs a set of commands using the runners shell
    - name: Download building tools & executing AppImage build
      run: |
        mkdir -m 777 -p $ABS_PATH_WORK_DIR
        cd $ABS_PATH_WORK_DIR
        wget -nv -c https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-$ARCH.AppImage
        ./linuxdeploy-$ARCH.AppImage --appimage-extract
        wget -nv https://raw.githubusercontent.com/linuxdeploy/linuxdeploy-plugin-gtk/master/linuxdeploy-plugin-gtk.sh
        chmod +x linuxdeploy-plugin-gtk.sh
        

    - name: Release AppImage
      if: ${{ github.ref == 'refs/heads/trunk' }}
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.NAME }}-${{ env.VERSION }} AppImage
        allowUpdates: True
        prerelease: False
        artifacts: "${{ env.ABS_PATH_WORK_DIR }}/${{ env.NAME }}*.AppImage*"
        token: ${{ secrets.GITHUB_TOKEN }}
        omitNameDuringUpdate: False
        omitBodyDuringUpdate: False
        tag: v${{ env.VERSION }}
        replacesArtifacts: true
    - name: Upload Artifacts
      if: ${{ github.ref != 'refs/heads/trunk' }}
      uses: actions/upload-artifact@v3
      with:
        name: AppImage
        path: ${{ env.ABS_PATH_WORK_DIR }}/${{ env.NAME }}*.AppImage*
